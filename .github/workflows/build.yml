name: Release Preparation

on:
  pull_request:
    types: [labeled]

jobs:
  prepare-for-release-build:
    if: github.event.label.name == 'Build'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '3.1.x', '6.x' ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Set up dotnet ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Verify dotnet installation
      run: dotnet --version
    - name: Install dependencies
      run: |
          dotnet add package EntityFramework --version 6.4.4
          dotnet add package EntityFramework.SqlServerCompact --version 6.4.4
          dotnet add package Microsoft.Bcl.AsyncInterfaces --version 7.0.0
          dotnet add package Microsoft.Extensions.Configuration --version 7.0.0
          dotnet add package Microsoft.Extensions.Configuration.Abstractions --version 7.0.0
          dotnet add package Microsoft.Extensions.Configuration.FileExtensions --version 7.0.0
          dotnet add package Microsoft.Extensions.Configuration.Json --version 7.0.0
          dotnet add package Microsoft.Extensions.FileProviders.Abstractions --version 7.0.0
          dotnet add package Microsoft.Extensions.FileProviders.Physical --version 7.0.0
          dotnet add package Microsoft.Extensions.FileSystemGlobbing --version 7.0.0
          dotnet add package Microsoft.Extensions.Primitives --version 7.0.0
          dotnet add package Microsoft.SqlServer.Compact" version --version 0.8876.1
          dotnet add package Stub.System.Data.SQLite.Core.NetFramework" version --version 0.118.0
          dotnet add package System.Buffers --version 4.5.1
          dotnet add package System.Data.SQLite" version --version 0.118.0
          dotnet add package System.Data.SQLite.Core" version --version 0.118.0
          dotnet add package System.Data.SQLite.EF6" version --version 0.118.0
          dotnet add package System.Data.SQLite.Linq" version --version 0.118.0
          dotnet add package System.IO --version 4.3.0
          dotnet add package System.Memory --version 4.5.5
          dotnet add package System.Numerics.Vectors --version 4.5.0
          dotnet add package System.Runtime --version 4.3.0
          dotnet add package System.Runtime.CompilerServices.Unsafe --version 6.0.0
          dotnet add package System.Security.Cryptography.Algorithms --version 4.3.1
          dotnet add package System.Security.Cryptography.Encoding --version 4.3.0
          dotnet add package System.Security.Cryptography.Primitives --version 4.3.0
          dotnet add package System.Text.Encodings.Web --version 7.0.0
          dotnet add package System.Text.Json --version 7.0.0
          dotnet add package System.Threading.Tasks.Extensions --version 4.5.4
          dotnet add package System.ValueTuple --version 4.5.0
          dotnet add package TagLibSharp --version 2.3.0
    - name: Compile and Build C#
      run: dotnet build --configuration Release
    - name: Copy Executables
      run: |
          cp ./MusicDatabaseGenerator/bin/Release/MusicDatabaseGenerator.exe ./build
          cp ./PlaylistTransferTool/bin/Release/PlaylistTransferTool.exe ./build
    - name: Commit Changes
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add .
        git commit -m "GHA_BUILD: Zipped pre-built C# executables with necessary appsettings and readmes"
        git push origin ${{ github.event.pull_request.head.ref }}
    # - name: Create Release
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     PR_BODY: ${{ github.event.pull_request.body }}
    #     PR_URL: ${{ github.event.pull_request.html_url }}
    #   run: |
    #     RELEASE_BRANCH=${{ github.event.pull_request.head.ref }}
    #     RELEASE_BODY="""$PR_BODY

    #     $PR_URL"""
    #     RELEASE_TAG=$(grep -oP "(?<=music-database-generator: )[0-9]+\.[0-9]+\.[0-9]+" ./prod-versions.ini)
    #     RELEASE_TITLE="$RELEASE_TAG: ${{ github.event.pull_request.title }}"
    #     gh release create "$RELEASE_TAG" --title "$RELEASE_TITLE" --notes "$RELEASE_BODY" --target $RELEASE_BRANCH -d
    #     gh release upload "$RELEASE_TAG" "./build/MSSQL_MusicDatabaseGenerator.zip"
    #     gh release upload "$RELEASE_TAG" "./build/MSSQL_PlaylistTransferTool.zip"
    #     gh release upload "$RELEASE_TAG" "./build/SQLite_MusicDatabaseGenerator.zip"
    #     gh release upload "$RELEASE_TAG" "./build/SQLite_PlaylistTransferTool.zip"