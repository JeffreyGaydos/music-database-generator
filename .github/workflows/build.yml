name: Release Preparation

on:
  pull_request:
    types: [labeled]

jobs:
  prepare-for-release-build:
    if: github.event.label.name == 'Build'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Run JS Version Minimization Script
      run: |
        python ./build/build.py > ./build/build_log.txt
    - name: Commit Changes
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add .
        git commit -m "GHA_BUILD: Zipped pre-built C# executables with necessary appsettings and readmes"
        git push origin ${{ github.event.pull_request.head.ref }}
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_BODY: ${{ github.event.pull_request.body }}
        PR_URL: ${{ github.event.pull_request.html_url }}
      run: |
        RELEASE_BRANCH=${{ github.event.pull_request.head.ref }}
        RELEASE_BODY="""$PR_BODY

        $PR_URL"""
        RELEASE_TAG=$(grep -oP "(?<=music-database-generator: )[0-9]+\.[0-9]+\.[0-9]+" ./prod-versions.ini)
        RELEASE_TITLE="$RELEASE_TAG: ${{ github.event.pull_request.title }}"
        gh release create "$RELEASE_TAG" --title "$RELEASE_TITLE" --notes "$RELEASE_BODY" --target $RELEASE_BRANCH -d
        gh release upload "$RELEASE_TAG" "./build/MSSQL_MusicDatabaseGenerator.zip"
        gh release upload "$RELEASE_TAG" "./build/MSSQL_PlaylistTransferTool.zip"
        gh release upload "$RELEASE_TAG" "./build/SQLite_MusicDatabaseGenerator.zip"
        gh release upload "$RELEASE_TAG" "./build/SQLite_PlaylistTransferTool.zip"